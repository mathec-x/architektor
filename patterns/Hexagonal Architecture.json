{
    "src": {
        "adapters": {
            "persistence": "Repository implementations (Prisma, etc.)",
            "controllers": {
                "ExpressAdapter.ts": "HTTP controllers (ExpressAdapter, routes etc.)"
            },
            "gateways": {
                "KafkaGateway.ts": "External API gateways (Kafka, RabbitMQ, APIs, SendGrid, etc.)"
            }
        },
        "core": {
            "domain": {
                "entities": "Domain entities (User, etc.)",
                "value-objects": "Value objects (Email, etc.)",
                "aggregates": "Aggregates (User aggregate, etc.)",
                "exceptions": "Domain-related Exceptions",
                "domain-events": {
                    "domain-event.ts": "Base domain event",
                    "user-created.event.ts": "User created event",
                    "user-email-changed.event.ts": "User email changed event"
                }
            },
            "use-cases": "Use cases (Create user, etc.)",
            "ports": {
                "repositories": "Repository ports",
                "services": {}
            }
        },
        "infrastructure": {
            "http": "HTTP framework configuration (Koa, Express, etc.)",
            "database": "Database configuration (Prisma, etc.)",
            "config": "General configuration (Logger, env, etc.)"
        },
        "main.ts": "Application entry point"
    },
    "tests": {
        "main-e2e.spec.ts": "Main application tests"
    }
}