{
    "src": {
        "application": {
            "dto": "Data Transfer Objects (input and output data)",
            "services": "Application services (orchestrating use cases)",
            "use-cases": "Use cases (Application Services)"
        },
        "domain": {
            "entities": "Domain entities (User, Product, etc.)",
            "interfaces": "Contracts (not implementations) of external services",
            "services": "Domain services (business rules affecting multiple entities)",
            "value-objects": "Value objects (Email, CPF, etc.)"
        },
        "infrastructure": {
            "cache": "Cache implementation (Redis, etc.)",
            "database": {
                "prisma": {
                    "client.ts": "PrismaClient instance",
                    "migrations": {},
                    "user.repository.ts": "UserRepository implementation"
                }
            },
            "http": {
                "controllers.ts": "API controllers",
                "interfaces.ts": "Interfaces related to the HTTP context",
                "routes.ts": "API route configuration"
            },
            "queue": {
                "bull.config.ts": "Bull configuration for message queues",
                "process-job.ts": "Job processing in queues"
            },
            "repositories": "Repository implementations based on Domain contracts",
            "services": "External service implementations (Email, Cache, etc.)"
        },
        "shared": {
            "config": "Application configurations",
            "errors": {
                "app-error.ts": "Error handling and custom exceptions",
                "not-found-error.ts": "Error handling and custom exceptions"
            },
            "middlewares": "Generic application middlewares",
            "utils": "Helper and utility functions"
        },
        "main.ts": "Server initialization file"
    }
}